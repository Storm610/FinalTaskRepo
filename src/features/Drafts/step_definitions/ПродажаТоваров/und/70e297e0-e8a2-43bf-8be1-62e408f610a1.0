{3,
{42,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,0,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},0,"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,0,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0},"//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯУказываюВДокументеЯблок(Парам01)"",""ЯУказываюВДокументеЯблок"",""Когда я указываю в документе 60 яблок"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ПослеПроведенияДокументаНаСкладеДолжноОстатьсяЯблок(Парам01)"",""ПослеПроведенияДокументаНаСкладеДолжноОстатьсяЯблок"",""Тогда, после проведения документа, на складе должно остаться 40 яблок"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ДолжноВыдаватьсяСообщениеОТомЧтоТовараНеДостаточноИДокументНеДолженПроводиться()"",""ДолжноВыдаватьсяСообщениеОТомЧтоТовараНеДостаточноИДокументНеДолженПроводиться"",""Тогда должно выдаваться сообщение, о том, что товара не достаточно и документ не должен проводиться"");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Когда я указываю в документе 60 яблок
//@ЯУказываюВДокументеЯблок(Парам01)
Процедура ЯУказываюВДокументеЯблок(КоличествоПродажи) Экспорт
	
	//Ванесса.ПосмотретьЗначение(КоличествоПродажи,Истина);
	ДокПродажи = СоздатьДокументПродажи(КоличествоПродажи);
	Контекст.Вставить(""СсылкаНаДокумент"", ДокПродажи);	
	
КонецПроцедуры

&НаКлиенте
//Тогда, после проведения документа, на складе должно остаться 40 яблок
//@ПослеПроведенияДокументаНаСкладеДолжноОстатьсяЯблок(Парам01)
Процедура ПослеПроведенияДокументаНаСкладеДолжноОстатьсяЯблок(КонечныйОстаток) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ПровестиДокПродажи(Контекст.СсылкаНаДокумент);
	
	Если НЕ ОстатокПравильный(КонечныйОстаток) Тогда
		
		ВызватьИсключение ""Неверный конечный остаток"";
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
//Тогда должно выдаваться сообщение, о том, что товара не достаточно и документ не должен проводиться
//@ДолжноВыдаватьсяСообщениеОТомЧтоТовараНеДостаточноИДокументНеДолженПроводиться()
Процедура ДолжноВыдаватьсяСообщениеОТомЧтоТовараНеДостаточноИДокументНеДолженПроводиться() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	Попытка
		ПровестиДокПродажи(Контекст.СсылкаНаДокумент);
		ВызватьИсключение ""Не сработал контроль остатков"";
	Исключение
		//Всё Ок
	КонецПопытки;
	
КонецПроцедуры

//окончание текста модуля

&НаСервере
Процедура ПровестиДокПродажи(СсылкаНаДокумент)
	
	ДокПродажи = СсылкаНаДокумент.ПолучитьОбъект();
	ДокПродажи.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

&НаСервере
Функция СоздатьДокументПродажи(КоличествоПродажи)
	
	ДокПродажи = Документы.Продажа.СоздатьДокумент();
	ДокПродажи.Дата = ТекущаяДата() + 1;
	СтрокаТЧ = ДокПродажи.Товары.Добавить();
	СтрокаТЧ.Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию(""Яблоко"");
	СтрокаТЧ.Количество = КоличествоПродажи;
	ДокПродажи.Записать(РежимЗаписиДокумента.Запись);
	
	Возврат ДокПродажи.Ссылка;
	
КонецФункции

&НаСервере
Функция ОстатокПравильный(КонечныйОстаток) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		""ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, Номенклатура = &Номенклатура) КАК ТоварыНаСкладахОстатки"";
	
	Запрос.УстановитьПараметр(""Дата"", ТекущаяДата() + 1);
	Запрос.УстановитьПараметр(""Номенклатура"", Справочники.Номенклатура.НайтиПоНаименованию(""Яблоко""));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Если ВыборкаДетальныеЗаписи.КоличествоОстаток = КонечныйОстаток Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;	
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}
