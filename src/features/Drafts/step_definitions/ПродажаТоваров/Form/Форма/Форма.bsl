//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУказываюВДокументеЯблок(Парам01)","ЯУказываюВДокументеЯблок","Когда я указываю в документе 60 яблок");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПослеПроведенияДокументаНаСкладеДолжноОстатьсяЯблок(Парам01)","ПослеПроведенияДокументаНаСкладеДолжноОстатьсяЯблок","Тогда, после проведения документа, на складе должно остаться 40 яблок");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДокументНеДолженПроводиться()","ДокументНеДолженПроводиться","Документ не должен проводиться");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Когда я указываю в документе 60 яблок
//@ЯУказываюВДокументеЯблок(Парам01)
Процедура ЯУказываюВДокументеЯблок(КоличествоПродажи) Экспорт
	
	//Ванесса.ПосмотретьЗначение(КоличествоПродажи,Истина);
	ДокПродажи = СоздатьДокументПродажи(КоличествоПродажи);
	Контекст.Вставить("СсылкаНаДокумент", ДокПродажи);	
	
КонецПроцедуры

&НаКлиенте
//Тогда, после проведения документа, на складе должно остаться 40 яблок
//@ПослеПроведенияДокументаНаСкладеДолжноОстатьсяЯблок(Парам01)
Процедура ПослеПроведенияДокументаНаСкладеДолжноОстатьсяЯблок(КонечныйОстаток) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ПровестиДокПродажи(Контекст.СсылкаНаДокумент);
	
	Если НЕ ОстатокПравильный(КонечныйОстаток) Тогда
		
		ВызватьИсключение "Неверный конечный остаток";
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
//Тогда должно выдаваться сообщение, о том, что товара не достаточно и документ не должен проводиться
//@ДокументНеДолженПроводиться()
Процедура ДокументНеДолженПроводиться() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	Попытка
		ПровестиДокПродажи(Контекст.СсылкаНаДокумент);
		ВызватьИсключение "Не сработал контроль остатков";
	Исключение
		//Всё Ок
	КонецПопытки;
	
КонецПроцедуры

//окончание текста модуля

&НаСервере
Процедура ПровестиДокПродажи(СсылкаНаДокумент)
	
	ДокПродажи = СсылкаНаДокумент.ПолучитьОбъект();
	ДокПродажи.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

&НаСервере
Функция СоздатьДокументПродажи(КоличествоПродажи)
	
	ДокПродажи = Документы.Продажа.СоздатьДокумент();
	ДокПродажи.Дата = ТекущаяДата() + 1;
	СтрокаТЧ = ДокПродажи.Товары.Добавить();
	СтрокаТЧ.Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию("Яблоко");
	СтрокаТЧ.Количество = КоличествоПродажи;
	ДокПродажи.Записать(РежимЗаписиДокумента.Запись);
	
	Возврат ДокПродажи.Ссылка;
	
КонецФункции

&НаСервере
Функция ОстатокПравильный(КонечныйОстаток) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, Номенклатура = &Номенклатура) КАК ТоварыНаСкладахОстатки";
	
	Запрос.УстановитьПараметр("Дата", ТекущаяДата() + 1);
	Запрос.УстановитьПараметр("Номенклатура", Справочники.Номенклатура.НайтиПоНаименованию("Яблоко"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Если ВыборкаДетальныеЗаписи.КоличествоОстаток = КонечныйОстаток Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;	
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции
